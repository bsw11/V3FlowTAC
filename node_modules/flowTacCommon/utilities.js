/**
 * Created by Administrator on 1/14/2015.
 */
// Common utilities that are safe for client, server


exports.isNullish = function(obj){
    if((typeof obj === "undefined") || (obj === null)){
        return true;
    }

    return false;
};

exports.stringIsEmpty = function(buf){
    if((isNullish(buf)) || (buf.length === 0)){
        return true;
    }

    return false;
};

exports.stringCompareNoCase = function(buf1, buf2){
    var low1, low2;

    if (stringIsEmpty(buf1)) {
        if (stringIsEmpty(buf2)) {
            return 0;
        }
        return -1;
    }

    if (stringIsEmpty(buf2)) {
        return 1;
    }

    low1 = buf1.toLowerCase();
    low2 = buf2.toLowerCase();

    if (low1 < low2) {
        return -1;
    }

    if (low1 > low2) {
        return 1;
    }

    return 0;
};

exports.indexOfNoCase = function(searchIn, searchFor){
    return searchIn.toLowerCase().indexOf(searchFor.toLowerCase());
};

exports.leadingZeros = function(nbr, len){
    var dif, noStr, zeros;

    noStr = nbr.toString();
    zeros = "0000000000";
    dif   = len - noStr.length;

    if (nbr >= 0) {
        if ((dif > 0) && (dif <= zeros.length)) {
            noStr = zeros.substr(0, dif) + noStr;
        }
    }
    return noStr;
};

exports.getStringValue = function(bufIn, dflt) {
    var bufOut = "";

    if (!stringIsEmpty(bufIn)) {
        bufOut = bufIn;
    } else if (!stringIsEmpty(dflt)) {
        bufOut = dflt;
    }

    return bufOut;
};

var s4 = function() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
};

exports.guid = function(wantDashes) {
    if ((isNullish(wantDashes) === true) || (wantDashes === false)) {
        return "" + (s4()) + (s4()) + (s4()) + (s4()) + (s4()) + (s4()) + (s4()) + (s4());
    }
    return "" + (s4()) + (s4()) + "-" + (s4()) + "-" + (s4()) + "-" + (s4()) + "-" + (s4()) + (s4()) + (s4());
};

exports.getOptionValue = function(attr, dflt) {
    var val;

    if (isNullish(attr) === true) {
        val = dflt;
    } else {
        val = attr;
    }

    return val;
};
