// Generated by CoffeeScript 1.6.3
(function() {
  var continuePlanData, createOrOpenDb, fs, oriento, oserver, processDataTypes, processPlanData, utils;

  utils = require("flowtacCommon/utilities");

  fs = require("fs");

  oriento = require("oriento");

  oserver = null;

  processPlanData = function(content) {
    var buf, processOpts;
    if (content.saveToDisk === true) {
      buf = JSON.stringify(content);
      fs.writeFileSync("C:/WorkTmp/nodeTemp/planData.txt", buf);
      console.log("Data written");
    } else {
      if (utils.isNullish(oserver)) {
        oserver = oriento({
          host: "localhost",
          port: 2480,
          username: "root",
          password: "2yutes"
        });
      }
      buf = fs.readFileSync("C:/WorkTmp/nodeTemp/planData.txt");
      content = JSON.parse(buf);
      processOpts = {
        sourceData: content,
        step: 1,
        curIndex: -1
      };
      continuePlanData(processOpts);
    }
    return null;
  };

  continuePlanData = function(opts) {
    switch (opts.step) {
      case 1:
        createOrOpenDb(opts);
        break;
      case 2:
        processDataTypes(opts);
    }
    return null;
  };

  createOrOpenDb = function(opts) {
    var db, dbName;
    if (opts.sourceData.facilityId === "flowtacAdmin") {
      dbName = "flowtacAdmin";
    } else {
      dbName = "ftAdmin_" + opts.facilityId;
    }
    db = oserver.use(dbName);
    if (utils.isNullish(db)) {
      oserver.create({
        name: dbName,
        type: "document",
        storage: "remote"
      }).then(function(db) {
        opts.db = db;
        opts.step = 2;
        return continuePlanData(opts);
      })["catch"](function(e) {
        return console.log("error " + e);
      });
    } else {
      opts.db = db;
      opts.step = 2;
      continuePlanData(opts);
    }
    return null;
  };

  processDataTypes = function(opts) {
    console.log(opts.db.name);
    opts.db["class"].create("DataType").then(function(DataType) {
      return console.log("created DataType class");
    })["catch"](function(e) {
      return console.log(e);
    });
    return null;
  };

  exports.processPlanData = processPlanData;

}).call(this);
